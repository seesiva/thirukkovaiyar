//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.container {
 
    @media (min-width: @screen-sm-min) {
      width: @container-sm;
    }
    @media (min-width: @screen-md-min) {
      width: @container-md;
    }
    @media (min-width: @screen-lg-min) {
      width: @container-lg;
    }
  }
  
  
  // Fluid container
  //
  // Utilizes the mixin meant for fixed width containers, but without any defined
  // width for fluid, full width layouts.
  
  .container-fluid {
    .container-fixed();
  }
  
  
  // Row
  //
  // Rows contain and clear the floats of your columns.
  
  .row {
    .make-row();
  }
  
  
  // Small grid
  //
  // Columns, offsets, pushes, and pulls for the small device range, from phones
  // to tablets.
  
  @media (min-width: @screen-sm-min) {
    .make-grid(sm);
  }
  
  
  // Medium grid
  //
  // Columns, offsets, pushes, and pulls for the desktop device range.
  
  @media (min-width: @screen-md-min) {
    .make-grid(md);
  }
  
  
  // Large grid
  //
  // Columns, offsets, pushes, and pulls for the large desktop device range.
  
  @media (min-width: @screen-lg-min) {
    .make-grid(lg);
  }
  

  // Create grid for specific class
.make-grid(@class) {
    .float-grid-columns(@class);
    .loop-grid-columns(@grid-columns, @class, width);
    .loop-grid-columns(@grid-columns, @class, pull);
    .loop-grid-columns(@grid-columns, @class, push);
    .loop-grid-columns(@grid-columns, @class, offset);
  }
  